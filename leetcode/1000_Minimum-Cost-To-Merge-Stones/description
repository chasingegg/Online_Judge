There are N piles of stones arranged in a row.  The i-th pile has stones[i] stones.

A move consists of merging exactly K consecutive piles into one pile, and the cost of this move is equal to the total number of stones in these K piles.

Find the minimum cost to merge all piles of stones into one pile.  If it is impossible, return -1.
给出一串数字，把k个数字合并，需要耗费的力气是这k个数字之和，问需要耗费
的力气最小是多少，然后注意有可能出现无法满足的情况，那就返回-1

Example 1:

Input: stones = [3,2,4,1], K = 2
Output: 20
Explanation: 
We start with [3, 2, 4, 1].
We merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].
We merge [4, 1] for a cost of 5, and we are left with [5, 5].
We merge [5, 5] for a cost of 10, and we are left with [10].
The total cost was 20, and this is the minimum possible.
Example 2:

Input: stones = [3,2,4,1], K = 3
Output: -1
Explanation: After any merge operation, there are 2 piles left, and we can't merge anymore.  So the task is impossible.

---------------
这种题目也许我永远都做不出来，这让我很难过
dp[i][j]表示间隔为[i,j]时最小花费去合并，stones[i]参与到合并
- 如果(j-i)%(K-1)==0，可以合并成一块，最后一次merge的耗费是i到j的和
- 否则，dp[i,k]，(k-i)%(K-1)==0,剩下的就是[k+1,j]