You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.

Flatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.
感觉上这是一个类似于树的结构，一般链表就是一个后继节点，但这里有可能有两个后继节点，我们要做的就是flatten这个链表，变成只有一个后继的双向链表

Example:

Input:
 1---2---3---4---5---6--NULL
         |
         7---8---9---10--NULL
             |
             11--12--NULL

Output:
1-2-3-7-8-11-12-9-10-4-5-6-NULL

----------------
想法也是很简单，递归地找到child链上最后一个节点，然后接上next链，同时需要注意一下prev指针